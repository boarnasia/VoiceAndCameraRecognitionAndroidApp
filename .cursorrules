Version Catalog の導入と利用を指示する

1. libs.versions.toml ファイルの作成または更新
- edit: gradle/libs.versions.toml
  intent: "Androidプロジェクトで使用する依存ライブラリとそのバージョン、プラグインのバージョンを定義する。ファイルが存在しない場合は新規作成する。"
  # 必要に応じて、具体的なライブラリとバージョンの例を記述することも可能
  # 例:
  # versions:
  #   android-compileSdk: "34"
  #   androidx-core-ktx: "1.12.0"
  # libraries:
  #   androidx-core-ktx: { module = "androidx.core:core-ktx", version.ref = "androidx-core-ktx" }
  # plugins:
  #   android-application: { id = "com.android.application", version.ref = "gradle" }

2. 各モジュールの build.gradle.kts ファイルの修正
- edit: app/build.gradle.kts # 必要に応じて他のモジュールも指定
  intent: "dependenciesブロック内のimplementation, testImplementation, androidTestImplementationなどを、libs.versions.toml で定義されたライブラリを参照する形式 (libs.ライブラリ名) に修正する。"
  # 例:
  # find: implementation("androidx.core:core-ktx:1.12.0")
  # replace: implementation(libs.androidx.core.ktx)
- edit: app/build.gradle.kts # 必要に応じて他のモジュールも指定
  intent: "pluginsブロック内のプラグイン適用を、libs.versions.toml で定義されたプラグインを参照する形式 (alias(libs.plugins.プラグイン名)) に修正する。"
  # 例:
  # find: id("com.android.application") version "8.4.0"
  # replace: alias(libs.plugins.android.application)
- edit: app/build.gradle.kts # 必要に応じて他のモジュールも指定
  intent: "androidブロック内の compileSdk, minSdkVersion, targetSdkVersion などのバージョン指定を、libs.versions.toml で定義されたバージョンを参照する形式 (libs.versions.バージョン名.get().toInt()) に修正する。"
  # 例:
  # find: compileSdk = 34
  # replace: compileSdk = libs.versions.android.compileSdk.get().toInt()

3. 新しい依存関係の追加方法の指示
- message: "新しい依存関係を追加する際は、まず gradle/libs.versions.toml ファイルにライブラリとバージョンを定義し、各モジュールの build.gradle.kts ファイルでは libs.<ライブラリ名> を使用してください。"
